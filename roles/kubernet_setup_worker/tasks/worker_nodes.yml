---
  - name: Install the OS dependencies
    apt:
      name: socat
      state: latest
      update_cache: yes 
    tags:
      - worker

  
  - name: Download  Worker cni and cri Binaries
    get_url:
      url: https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz
      dest: /root/
      validate_certs: no
    tags:
      - worker
  - name: Download  Worker cri Binaries
    get_url:
      url: https://github.com/containerd/cri-containerd/releases/download/v1.0.0-beta.1/cri-containerd-1.0.0-beta.1.linux-amd64.tar.gz
      dest: /root/
      validate_certs: no
    tags:
      - worker
  - name: Download  Worker kubelete Binaries
    get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl
      dest: /root/
      validate_certs: no
    tags:
      - worker
  - name: Download  Worker kube-proxy Binaries
    get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kube-proxy
      dest: /root/
      validate_certs: no
    tags:
      - worker
  - name: Download  Kubelete Binaries
    get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubelet
      dest: /root/
      validate_certs: no
    tags:
      - worker

  - name: create installation directory
    file: path={{ item }} state=directory
    with_items:
         - /etc/cni/net.d
         - /opt/cni/bin
         - /var/lib/kubelet
         - /var/lib/kube-proxy
         - /var/lib/kubernetes
         - /var/run/kubernetes
    tags:
      - worker

  - name: install worker bianry
    shell: >
           tar -xvf /root/cni-plugins-amd64-v0.6.0.tgz -C /opt/cni/bin/;
           tar -xvf /root/cri-containerd-1.0.0-beta.1.linux-amd64.tar.gz -C /;
           chmod +x /root/kubectl /root/kube-proxy /root/kubelet;
           cp /root/kubectl /root/kube-proxy /root/kubelet /usr/local/bin/
    ignore_errors: yes
    tags:
      - worker

  - name: Move the network configuration files to the CNI configuration directory
    template: src={{ item.name }} dest=/etc/cni/net.d/{{ item.path }}
    with_items:
         - { name: '10-bridge.conf.j2', path: '10-bridge.conf'}
         - { name: '99-loopback.conf.j2', path: '99-loopback.conf'} 
    tags:
      - worker

  - name: Configure the Kubelet
    copy: src={{ item.name }} dest={{ item.dest }}
    with_items:
         - { name: '/etc/ansible/roles/setting_up_CA_TLS_Cert/files/{{ inventory_hostname }}-key.pem', dest: '/var/lib/kubelet/'}
         - { name: '/etc/ansible/roles/setting_up_CA_TLS_Cert/files/{{ inventory_hostname }}.pem', dest: '/var/lib/kubelet/'}
         - { name: '/etc/ansible/roles/setting_up_TLS_RBAC/files/{{ inventory_hostname }}.kubeconfig', dest: '/var/lib/kubelet/kubeconfig'}
         - { name: '/etc/ansible/roles/setting_up_TLS_RBAC/files/kube-proxy.kubeconfig', dest: '/var/lib/kube-proxy/kubeconfig'}
         - { name: '/etc/ansible/roles/setting_up_CA_TLS_Cert/files/ca.pem', dest: '/var/lib/kubernetes/'}
    tags:
      - worker

  - name: Start the containerd service
    systemd:
      name: containerd
      state: restarted
      enabled: True
      daemon_reload: yes
    tags:
     - worker

  
  - name: Start the cri-containerd service
    systemd:
      name: cri-containerd
      state: restarted
      enabled: True
      daemon_reload: yes
    tags:
     - worker

  - name: move kubelet.service.j2 in the systemd system directory
    template: 
      src: kubelet.service.j2
      dest: /etc/systemd/system/kubelet.service
    notify:
      - Start the kubelet service
    tags:
      - worker
  - name: restart kubelet service
    service: name=kubelet state=restarted
    tags:
      - worker
  - name: move kube-proxy.service.j2 in the systemd system directory
    template:
      src: kube-proxy.service.j2
      dest: /etc/systemd/system/kube-proxy.service
    notify:
       - Start the kube-proxy service
    tags:
      - worker
  - name: restart kube-proxy service
    service: name=kube-proxy state=restarted
    tags:
      - worker
