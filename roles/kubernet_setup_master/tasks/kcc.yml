---
  - name: Download and install the Kubernetes controller binaries
    get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/{{ kub_version }}/bin/linux/amd64/{{ item }}
      dest: /usr/local/bin/
      mode: 755
      validate_certs: no
    with_items:
         - kube-apiserver
         - kube-controller-manager
         - kube-scheduler
         - kubectl
    tags: 
      - controller

  - name: create kubernetes data directory
    file: path=/var/lib/kubernetes/ state=directory
    tags: 
      - controller
  
  - name: copy kuberenets certs in /var/lib/kubernetes dir
    copy: src={{ item }} dest=/var/lib/kubernetes/
    with_items:
         - /etc/ansible/roles/setting_up_CA_TLS_Cert/files/ca.pem
         - /etc/ansible/roles/setting_up_CA_TLS_Cert/files/ca-key.pem
         - /etc/ansible/roles/setting_up_CA_TLS_Cert/files/kubernetes-key.pem
         - /etc/ansible/roles/setting_up_CA_TLS_Cert/files/kubernetes.pem
         - /etc/ansible/roles/setting_data_encryption_config_key/files/encryption-config.yaml
    tags:
       - controller
    
  - name: Create the systemd unit file for kube-apiserver
    template: 
      src: kube-apiserver.service.j2
      dest: /etc/systemd/system/kube-apiserver.service
    notify: 
      - Start the kube-apiserver service
    tags:
       - controller

  - name: Create the systemd unit file for Kubernetes Controller Manager
    template: 
      src: kube-controller-manager.service.j2
      dest: /etc/systemd/system/kube-controller-manager.service
    notify: 
      - Start the kube-controller-manager service
    tags:
       - controller

  - name: Create the systemd unit file for Kubernetes Scheduler
    template: 
      src: kube-scheduler.service.j2
      dest: /etc/systemd/system/kube-scheduler.service
    notify: 
      - Start the kube-scheduler service
    tags:
       - controller
